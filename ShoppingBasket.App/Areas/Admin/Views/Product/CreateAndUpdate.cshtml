@model ShoppingBasket.Models.ViewModels.ProductVm

@{
    if(Model.Product != null || Model.Product!.Id != 0)
    {
        ViewData["Title"] = "Update Product";
    }
    else
    {
        ViewData["Title"] = "Create Product";
    }
    
}

<style>
    /*select tag's css starts */

    .nice-select, .nice-select * {
        width: 100%;
    }

    .nice-select {
        margin-bottom: 20px;
    }

    /* end */


    /*box shape image upload ui css starts*/

    .box {
        width: 100%;
        height: 200px;
        background-color: #eaeaea;
        border: 1px solid #ccc;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
    }

        .box:hover {
            background-color: #ccc;
        }

        .box input[type="file"] {
            display: none;
        }
    /* ends */

</style>

<div class="container my-5">

    <div class="my-3">
        <partial name="_GoBackBtn"/>
    </div>
    
    <div class="card">
        <div class="card-body admin-card-body">
            <div class="card-header admin-card-header">
                <h3>Add Product</h3>
            </div>
            <div class="row mt-4">
                <form class="offset-lg-2 offset-md-2 col-md-8 col-lg-8" method="post" asp-action="CreateAndUpdate" asp-controller="Product" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly"></div>

                    @* this will work only update page *@
                    @if (@Model.Product != null && @Model.Product!.Id != 0)
                    {
                        <input asp-for="Product.Id"  hidden/>
                        <input asp-for="Product.Stock!.Id"  hidden/>
                    }
                    <input asp-for="Product.ProductImage_1" hidden />
                    <input asp-for="Product.ProductImage_2" hidden />
                    <input asp-for="Product.ProductImage_3" hidden />

                    <div class="form-group px-3">
                        <label class="form-label" asp-for="Product.Name"></label>
                        <input type="text" asp-for="Product.Name" class="form-control" />
                        <span asp-validation-for="Product.Name" class="text-danger"></span>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="form-group px-3">
                                <label class="form-label" asp-for="Product.Price"></label>
                                <div class="input-group mb-3">
                                    <span class="input-group-text" id="basic-addon1">$</span>
                                    <input type="text" asp-for="Product.Price" min="1" max="10000" class="form-control number-field" placeholder="Ex. 12.55" />
                                    <span asp-validation-for="Product.Price" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6">
                            <div class="form-group mb-4 px-3">
                                <label class="form-label" asp-for="Product.Stock!.CurrentStock"></label>
                                <input type="text" class="form-control number-field" min="1" max="50" asp-for="Product.Stock!.CurrentStock" placeholder="Ex. 12" />
                                <span asp-validation-for="Product.Stock!.CurrentStock" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group px-3">
                        <label asp-for="Product.CategoryId" class="form-label"></label> <br>
                        <select asp-for="Product.CategoryId" asp-items="@Model.Categories" style="width: 100%" id="select">
                            <option selected disabled value="0">Select a category &nbsp;</option>
                        </select>
                        <span id="productIdErrorMsg" class="text-danger d-none">Must select a category!</span>
                    </div>

                    <div class="form-group mt-sm-4 mt-md-0 mt-lg-0 px-3">
                        <label class="form-label" asp-for="Product.Description"></label>
                        <textarea asp-for="Product.Description" class="form-control" rows="6"></textarea>
                        <span asp-validation-for="Product.Description" class="text-danger"></span>
                    </div>


                    @* There are at most 3 images *@

                    <div>&nbsp;</div>
                    <div class="row px-3 mb-4">
                        <label class="form-label">Product's Images</label>


                        @* for first image *@
                        <div class="col-md-4 col-lg-4 col-sm-6">
                            <span class="text-warning">Recommended**</span>
                            <div class="box" onclick="openFileInput('firstImage')" title="1st Image (Required!)" id="imageSelector1">
                                <label for="firstImage">Image-1</label>
                                <input type="file" onchange="uploadImage('firstImage', 'preview_1', 'imageSelector1')" id="firstImage" accept="image/png, image/jpeg, image/jpg" />
                            </div>
                            <span asp-validation-for="Product.ProductImage_1" class="text-danger"></span>

                            <div class="w-100" id="image_1" hidden>
                                <img src="" alt="" id="preview_1" onclick="openFileInput('firstImage')" class="img-thumbnail" style="cursor: pointer">
                            </div>
                        </div>


                        @* for second image *@
                        <div class="col-md-4 col-lg-4 col-sm-6">
                            <span class="text-secondary">(Optional)</span>
                            <div class="box" onclick="openFileInput('secondImage')" title="2nd Image" id="imageSelector2">
                                <label for="secondImage">Image-2</label>
                                <input type="file" onchange="uploadImage('secondImage', 'preview_2', 'imageSelector2')" id="secondImage" accept="image/png, image/jpeg, image/jpg" />
                            </div>

                            <div class="w-100" id="image_2" hidden>
                                <img src="" alt="" id="preview_2" class="img-thumbnail mb-1">
                                &nbsp;
                                <button class="btn btn-danger btn-sm w-75 offset-1" type="button" onclick="removeImage('imageSelector2', 'image_2', 'preview_2')">REMOVE</button>
                            </div>
                        </div>


                        @* for third image *@
                        <div class="col-md-4 col-lg-4 col-sm-6">
                            <span class="text-secondary">(Optional)</span>
                            <div class="box" onclick="openFileInput('thirdImage')" title="3rd Image" id="imageSelector3">
                                <label for="thirdImage">Image-3</label>
                                <input type="file" onchange="uploadImage('thirdImage', 'preview_3', 'imageSelector3')" id="thirdImage" accept="image/png, image/jpeg, image/jpg" />
                            </div>

                            <div class="w-100" id="image_3" hidden>
                                <img src="" alt="" id="preview_3" class="img-thumbnail mb-1">
                                &nbsp;
                                <button class="btn btn-danger btn-sm w-75 offset-1" type="button" onclick="removeImage('imageSelector3', 'image_3', 'preview_3')">REMOVE</button>
                            </div>
                        </div>


                    </div>


                    <!-- Submit button -->
                    <div class="px-3">
                        <button type="submit" onclick="return validateImage()" class="site-btn text-light btn-block mb-4 mt-4 text-uppercase">
                            @((Model.Product == null || Model.Product.Id == 0) ? "Save " : "Update ") product
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts
    {
    @{
        <partial name="_ValidationScriptsPartial" />
    }

    <script type="text/javascript">

        // this event lister block works only on update page
        document.addEventListener("DOMContentLoaded", () => {
            previewTheImage("imageSelector1", "preview_1", document.getElementById("Product_ProductImage_1").value);
            previewTheImage("imageSelector2", "preview_2", document.getElementById("Product_ProductImage_2").value);
            previewTheImage("imageSelector3", "preview_3", document.getElementById("Product_ProductImage_3").value);
        });
        
        // Validate if required 1st image is selected or empty
        function validateImage() {
            if (document.getElementById('Product_ProductImage_1').value === "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'First image is required!',
                    });
                document.getElementById("imageSelector1").style.borderColor = "red";
                document.getElementById("productIdErrorMsg").classList.remove("d-none");
                return false;
                }

            // Validation of select tag
            select = document.getElementById('select');
            if (select.value != 0 && select.value != null) {
                return true;
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'You must select a Category!',
                });
                document.getElementsByClassName("nice-select")[0].style.borderColor = "red";
                return false;
            }
        }

        // number filed validation starts...
        let numberFields = document.querySelectorAll('.number-field');

        numberFields.forEach(function (field) {
            field.addEventListener('input', function () {
                let sanitized = this.value.replace(/[^-.0-9]/g, '');  // Remove invalid characters
                sanitized = sanitized.replace(/(.)-+/g, '$1');  // Remove non-leading minus signs
                sanitized = sanitized.replace(/\.(?=.*\.)/g, '');  // Remove the first point if there is more than one
                this.value = sanitized;  // Update value
            });
        });

        // clickable input image box starts
        function openFileInput(inputID) {
            let fileInput = document.getElementById(inputID);
            console.log(inputID)
            fileInput.click();
        }

        // remove uploaded images which are optional if delete btn hits
        function removeImage(imageSelectorId, previewDivId, previewImageTagId) {
            document.getElementById(previewImageTagId).src = "";
            document.getElementById(imageSelectorId).hidden = false;  // image uploader unhidden
            document.getElementById(previewDivId).hidden = true;  // preview_2 hidden
            if (imageSelectorId === "imageSelector2") removeImagesFromInputTag("Product_ProductImage_2"); // remove image url from model's property
            if (imageSelectorId === "imageSelector3") removeImagesFromInputTag("Product_ProductImage_3"); // remove image url from model's property
        }


        // store the image url into the model dotnet property
        function storeImageURL(imgURL, imageSelectorId) {
            if (imageSelectorId === "imageSelector1") document.getElementById("Product_ProductImage_1").value = imgURL;
            else if (imageSelectorId === "imageSelector2") document.getElementById("Product_ProductImage_2").value = imgURL;
            else if (imageSelectorId === "imageSelector3") document.getElementById("Product_ProductImage_3").value = imgURL;
        }


        // preview images after loaded or uploaded
        function previewTheImage(imageSelectorId, previewId, ImageURL) {
            if (ImageURL.trim() !== "") {
                document.getElementById(imageSelectorId).hidden = true;  // image box hidden
                if (previewId === "preview_1") document.getElementById("image_1").hidden = false;  // preview_1 unhidden
                if (previewId === "preview_2") document.getElementById("image_2").hidden = false;  // preview_2 unhidden
                if (previewId === "preview_3") document.getElementById("image_3").hidden = false;  // preview_3 unhidden
                document.getElementById(previewId).src = ImageURL;  // preview image
            }
        }

        // removing the optional images
        function removeImagesFromInputTag(inputID) {
            document.getElementById(inputID).value = "";
        }

        // image uploader and preview
        function uploadImage(imageNo, previewId, imageSelectorId) {
            let fileInput = document.getElementById(imageNo);
            let file = fileInput.files[0];

            let formData = new FormData();
            formData.append("image", file);

            axios
                .post(
                    "https://api.imgbb.com/1/upload?key=83c06bb5765e7af399e8f93f1416d00f",
                    formData
                )
                .then(function (response) {
                    console.log("Image uploaded successfully:");
                    console.log(response.data?.data["url"]);
                    const ImageURL = response.data?.data["display_url"];
                    previewTheImage(imageSelectorId, previewId, ImageURL);  // preview images

                    // store imgUrl into model's property
                    storeImageURL(response.data?.data["url"], imageSelectorId);

                })
                .catch(function (error) {
                    console.error("Error uploading image:", error);
                });
        }

    </script>
}