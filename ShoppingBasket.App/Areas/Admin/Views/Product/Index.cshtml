@model ShoppingBasket.Models.ViewModels.ProductVm

@{
    ViewData["Title"] = "Products";
}

<div class="container my-5">
    <div class="my-3">
        <a asp-area="Admin" asp-controller="Product" asp-action="CreateAndUpdate" class="site-btn text-light">Add Product</a>
    </div>
    
    <div class="card">
        <div class="card-body admin-card-body">
            <div class="card-header admin-card-header">
                <h3>Products</h3>
            </div>
            <div class="row mt-4 p-4">
                @if (Model.ProductsCount <= 0)
                {
                    <p class="text-danger text-center  px-2 py-5">No Products found!</p>
                }
                else
                {
                    <div class="table-responsive-sm">
                        <table class="table table-striped table-bordered" id="productsTable">
                            <thead>
                            <tr>
                                <th>Id</th>
                                <th>Product's name</th>
                                <th>Category</th>
                                <th>Price</th>
                                <th>Stock</th>
                                <th>Action</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr>
                            
                            </tr>
                            </tbody>
                        </table>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        let dataTable = null;
        $(document).ready(function () {
            dataTable = $('#productsTable').DataTable({
            ajax: {
                url: '/Admin/Product/GetProducts',
                complete: function (data) {
                   let responseData = data["responseJSON"]?.data;
                   if (responseData.length === 0){
                       setInterval(function(){ window.location.reload(); }, 1500);
                   }
                },
            },
            columns: [
                { data: 'id' },
                { data: 'name' },
                { data: 'category.name' },
                { data: 'price', render: $.fn.dataTable.render.number('.', '.', 2, '$') },
                { data: 'stock.currentStock' },
                {
                    data: 'id',
                    render: function (data) {
                        return `<a href="/Admin/Product/CreateAndUpdate?id=${data}" title="Edit" class="p-2 site-btn btn">Edit</a>
                                <a onclick=deleteProduct(${data}) title="Delete" class="btn btn-danger p-2 mx-2 text-white">Delete</a>`;
                    }
                }
            ],
            });
        })
        
        function deleteProduct(data) {
            Swal.fire({
              title: 'Are you sure?',
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
              if (result["isConfirmed"]) {
                  $.ajax({
                  method: 'DELETE',
                  url: `/Admin/Product/DeleteProduct?id=${data}`,
                  success: function (data) {
                      Swal.fire(
                        'Deleted!',
                        'Product has been deleted.',
                        'success'
                      )
                      dataTable.ajax.reload();
                  },
                  error: function (error) {
                      Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: error?.responseText,
                      })
                  }
              });
              }
            }) 
        }
    </script>
}
